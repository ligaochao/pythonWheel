#!/usr/bin/env python3

import tkinter as tk
import threading
import pyperclip
import pyautogui
from pynput.keyboard import Controller, Key, Listener
from pynput import mouse
from pynput import keyboard
from collections import Counter
from  tkinter  import ttk
import win32gui
import pymysql
import time
import easygui as g

lastSentence = None
#这里记录字符的连续长度
strList = []
#这里记录排序后的数组
copyList = []
#这里记录窗口变化
fileUrlOld = None
#这里记录要被替换的字符串
replaced_string = None
replaced_string1 = None  #分中英文
#这里记录的是实际值
realS = ""
#这里记录上一个按键值
firstBu=None
#这里记录全局的标签
label = "python"




hwnd_title = dict()
"""
智能提示
"""
def intelligent_Tips(sentence,label):
    stock_identification = 0   #0：快捷输入库  1：重要信息库  2：代码库， 3 日常记录库
    if str(sentence) != "":
        writing_Template_query_all_sql = "SELECT * from  code_query WHERE  content  LIKE '%BBBB%'  and label = '"+label+"'  ORDER BY  count DESC "
        # 查询数据库 list
        all_record = queryMysql(writing_Template_query_all_sql.replace("BBBB",str(sentence).replace("\n","").replace("\r","").replace(" ","")))
        print(all_record)
        # print(writing_Template_query_all_sql.replace("BBBB",str(sentence).replace("\n","").replace("\r","")))
        contentList = []
        for obj in all_record:
            contentList.append(obj.get("content"))
    return contentList

     



#把数据库查询结果转换为json
def sql_fetch_json(cursor: pymysql.cursors.Cursor):
    """
    Convert the pymysql SELECT result to json format
    :param cursor:
    :return:
    """
    keys = []
    for column in cursor.description:
        keys.append(column[0])
    key_number = len(keys)

    json_data = []
    for row in cursor.fetchall():
        print(row)  #java
        # item = dict()
        item = {}
        for q in range(key_number):
            item[keys[q]] = row[q]
        json_data.append(item)

    return json_data

#查询通用接口
def  queryMysql(sql,dbName="personal_product"):
    # 打开数据库连接
    db = pymysql.connect("localhost", "root", "lgc057171", dbName, charset='utf8' )
    # 使用cursor()方法获取操作游标 
    cursor = db.cursor()
    # 使用execute方法执行SQL语句
    cursor.execute(sql)
    # 使用 fetchone() 方法获取一条数据
    # data = cursor.fetchone()
    data = sql_fetch_json(cursor)
    # print(data)
    # 关闭数据库连接
    db.close()
    return data 
# 插入,更新，删除通用接口
def  saveMysql(sql,dbName="personal_product"):
    # 打开数据库连接
    db = pymysql.connect("localhost", "root", "lgc057171", dbName, charset='utf8' )
    # 使用cursor()方法获取操作游标 
    cur= db.cursor()
    # 使用execute方法执行SQL语句
    try:
        cur.execute(sql)
        #提交
        db.commit()
    except Exception as e:
        #错误回滚
        print(e)
        db.rollback() 
    finally:
        db.close()
    return True
def get_all_hwnd(hwnd,mouse):
    if win32gui.IsWindow(hwnd) and win32gui.IsWindowEnabled(hwnd) and win32gui.IsWindowVisible(hwnd):
        hwnd_title.update({hwnd:win32gui.GetWindowText(hwnd)})



def  getHwnd():
    appList = []
    # print(hwnd_title.items())
    for h,t in hwnd_title.items():
        if t is not "":
            t = t.replace("*","").replace(" - Notepad++","")
            t = t.replace("•","").strip()
            tList = t.split(" ")
            if t != "tk":
                appList.append(tList[0].replace("(mysite) - Sublime Text (UNREGISTERED)",""))
    if "tk" == appList[0]:
        print("试试看有没有走到这个地方"+str(appList[1]))
        #
        return  appList[1]
    return appList[0]


test_list = []
def on_copy(sentence):
    global copyList,test_list,label
    if len(sentence)>10:
        return None
        
    test_list = test_list + intelligent_Tips(sentence,label)
    copyList1 = []
    value = sentence 
    # value = event.widget.get()
    # value = value.strip().lower()
    if value == '':
        data = test_list
        copyList1 = test_list
    else:
        data = []
        index = 1
        for item in test_list:
            if value in item.lower():
                data.append(str(index)+","+item)
                copyList1.append(item)
                index = index + 1 
    copyList = copyList1           
    listbox_update(data)



def on_save(sentence):
    result = pyautogui.confirm(text=str(sentence)[0:300],title='保存到代码库',buttons=["python","java","js","html","css","取消"])
    record_insert_sql = "INSERT INTO code_query  (label,content) VALUES ('AAAA','BBBB')"
    if str(result).find("取消") > -1:
        return None
    saveMysql(record_insert_sql.replace("AAAA",result.replace("\\", "\\\\").replace("'","\\'")).replace("BBBB",str(sentence).replace("\\", "\\\\").replace("'","\\'")))
    pyautogui.alert(text='录入成功',title='',button='OK') 
def on_keyrelease(sentence):
    global copyList,fileUrlOld,test_list,realS,label
    copyList1 = []
    win32gui.EnumWindows(get_all_hwnd, 0)
    # print("当前最新句柄"+getHwnd())
    fileUrl = getHwnd()
    if fileUrlOld != fileUrl or fileUrlOld == fileUrl:
        fileUrlOld = fileUrl
        test_list = []
        # try:
        abcList = []
        print(fileUrl)
        try:
            with open(fileUrl,"r+",encoding = "utf-8") as f:
                for obj in f:
                    obj = obj.replace("\n","")
                    if obj != "":
                        objList = obj.split(" ")
                        for obj1 in objList:
                            if obj1 not in abcList:
                                number = len(sentence)
                                if obj.find(";"*len(sentence)) > -1 or  obj.find("；"*len(sentence)) > -1:
                                    # print("实际的字符串0是"+str(obj))
                                    sentence = obj.replace("；",";").replace(";"*len(sentence),"").strip()
                                    # print("实际的字符串1是"+str(sentence))
                                    sentence = sentence[len(sentence)-number:len(sentence)]
                                    # print("实际的字符串2是"+str(sentence))
                                    realS = sentence
                                    # print("实际的字符串3是"+str(sentence))
                                abcList.append(obj1.replace(";"*len(sentence),"").replace("；"*len(sentence),""))
        except Exception as e:
            print(e)
        
        test_list = test_list + intelligent_Tips(sentence,label)
        test_list = test_list+abcList
        # except Exception as e:
        #     print("baocuo"+str(e))
    # value = event.widget.get()
    # print(test_list)
    value = sentence
    if value == '':
        data = test_list
        copyList1 = test_list
    else:
        data = []
        index = 1 #
        for item in test_list:#get3
            # print(value)
            if item.lower().find(value.lower())>-1 :
                # print(str(index)+"---"+str(item.lower()))
                data.append(str(index)+","+item)
                copyList1.append(item)
                index = index + 1
    copyList = copyList1             
    listbox_update(data)


def listbox_update(data):
    # delete previous data
    listbox.delete(0, 'end')
    # sorting data #我1
    # data = sorted(data, key=str.lower)List
    # put new data
    for item in data:
        listbox.insert('end', item)


def on_select(event):
    #这里点击则展示全部的信息
    content = str(event.widget.get(event.widget.curselection()))
    content =",".join(content.split(",")[1:])
    #这边可以拓展一系列功能
    # print("!!!!!!!!!!!!!!!!!!!!!!!!!")
    # result1 = pyautogui.confirm(text=content,title='功能处理',buttons=["复制","翻译","查询"])
    result1 = g.buttonbox(msg=content[0:300],title="",choices=("复制","翻译","查询","取消"))
    print(result1)
    if None != result1 and str(result1).find("复制")>-1:
        pyperclip.copy(content)
    if None != result1 and str(result1).find("取消") == -1:
        print("进来了----"+content)
        code_query_update_sql = "UPDATE code_query SET count  = count + 1 WHERE content = 'BBBB'"
        saveMysql(code_query_update_sql.replace("BBBB",content.replace("\\", "\\\\").replace("'","\\'")))

    # display element selected on list
    # print('(event) previous:', event.widget.get('active'))
    # print('(event)  current:', event.widget.get(event.widget.curselection()))
    # print('---')

# def on_select(event):

#修改文件内容
def alter(file,old_str,new_str):
    """
    替换文件中的字符串
    :param file:文件名
    :param old_str:就字符串
    :param new_str:新字符串
    :return:
    """
    file_data = ""
    # print("新字符串是"+new_str)
    with open(file, "r", encoding="utf-8") as f:
        for line in f:
            if old_str in line:
                line = line.replace(old_str,new_str)
            file_data += line
    with open(file,"w",encoding="utf-8") as f:
        f.write(file_data)


def fun_timer(obj,flag):
    global lastSentence,copyList,replaced_string,replaced_string1,realS
    # print('Hello Timer!')
    sentence = pyperclip.paste()
    if obj in ["1","2","3","4","5","6","7","8","9","0"] and flag == "1":
        try:
            # print(copyList)
            pyperclip.copy(copyList[int(obj)-1])
            copyResult =  pyperclip.paste()
            # print("老字符串为"+str(realS+replaced_string+str(obj)))
            if replaced_string !=None and fileUrlOld != None:
                pyautogui.hotkey('ctrl', 's')
                alter(fileUrlOld,realS+replaced_string+str(obj),copyResult)
                alter(fileUrlOld,realS+replaced_string1+str(obj),copyResult)
                # alter(fileUrlOld,replaced_string1,copyResult)
                # alter(fileUrlOld,replaced_string,copyResult)
            # copyList = []             
            listbox_update([])
        except Exception as e:
            print("1111"+str(e))
    if flag == "2":
        sentence = "".join(strList[len(strList)-2*int(obj):len(strList)-int(obj)])
        lastSentence = None
        # print("字符串是"+str(strList))
        # print("实际的字符串是"+str(sentence))
        if lastSentence != sentence:
            lastSentence = sentence
            on_keyrelease(sentence)

def go(*args):   #处理事件，*args表示可变参数
    global label
    label = str(comboxlist.get()).strip()
    print(comboxlist.get()) #打印选中的值


root = tk.Tk()

comvalue=tk.StringVar()#窗体自带的文本，新建一个值
comboxlist=ttk.Combobox(root,textvariable=comvalue) #初始化
comboxlist["values"]=("python","java","js","html","css")
comboxlist.current(0)  #选择第一个
comboxlist.bind("<<ComboboxSelected>>",go)  #绑定事件,(下拉列表框被选中时，绑定go()函数)
comboxlist.pack()


# entry = tk.Entry(root)
# entry.pack()
# entry.bind('<KeyRelease>', on_keyrelease)

def word_count_in_str(string, keyword):
    return len(string.split(keyword))-1


# 监听按压
def on_press(key):
    global strList,replaced_string,replaced_string1,firstBu,test_list
    keyValue = ""
    try:
        keyValue = key.char
    except Exception as e:
        keyValue = str(key)
    # print(keyValue,firstBu)
    if keyValue not in ["Key.space","Key.enter","Key.ctrl_l","Key.right","Key.shift_r","Key.shift","Key.alt_l"]:
        if keyValue not in ["1","2","3","4","5","6","7","8","9","0"] :
            # print(keyValue)
            if keyValue.find("Key.") == -1:
                strList.append(keyValue)
                if len(strList) > 40:
                    strList = strList[len(strList)-40:len(strList)]
                # print("累加的字符串为"+str(strList))
        elif firstBu != "Key.shift_r":
            test_list = []
            strdd = "".join(strList)
            # print(strList)
            if strdd.find(";;")>-1 or strdd.find("；；")>-1:
                if ";" in strList[len(strList)-3:len(strList)]  or "；" in strList[len(strList)-3:len(strList)]:
                    fun_timer(keyValue,"1")
        if keyValue in [";"]:
            result = 0
            if len(strList)>10:
                result = word_count_in_str("".join(strList[len(strList)-10:len(strList)]),";")
            else:
                result = word_count_in_str("".join(strList),";")
            # print("字符串为"+str("".join(strList[len(strList)-5:len(strList)])))
            # print("出现次数"+str(result))
            if int(result)>1:
                test_list = []
                pyautogui.hotkey('ctrl', 's')
                fun_timer(str(result),"2")
                replaced_string = ";"*int(result)
                replaced_string1 = "；"*int(result)
    if firstBu == "Key.shift_r" and keyValue in ["1","2","3","4","5","6","7","8","9","0"]:
        pass
    elif firstBu == "Key.ctrl_l" and keyValue == "c" or firstBu == "c" and keyValue == "Key.ctrl_l":
        # pyautogui.hotkey('ctrl', 'c')
        time.sleep(1)
        sentence =  pyperclip.paste()
        print("拷贝的内容是---"+sentence)
        test_list = []
        firstBu = None
        keyValue = None
        # print("进来这个分支了--"+str(sentence))
        on_copy(sentence)
    elif firstBu == "Key.ctrl_l" and keyValue == "q" or firstBu == "q" and keyValue == "Key.ctrl_l":
        pyautogui.hotkey('ctrl', 'c')
        sentence =  pyperclip.paste()
        on_save(sentence)

    else:
        firstBu = keyValue


    # pass
# 监听按压
def on_release(key):
    pass
# 开始监听
def start_listen():
    with Listener(on_press=on_press,on_release=on_release) as listener:
        listener.join()

import threading
t= threading.Thread(target = start_listen)
t.start()

listbox = tk.Listbox(root)
listbox.pack()
#listbox.bind('<Double-Button-1>', on_select)
listbox.bind('<<ListboxSelect>>', on_select)
listbox_update(test_list)
root.wm_attributes('-topmost',1)
root.mainloop()
